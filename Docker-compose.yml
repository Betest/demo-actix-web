version: '3.9'

services:
  demo-actix-web:
    container_name: demo-actix-web
    build:
      context: .
      # args:
      #   DATABASE_URL: postgres://postgres:postgres@db:3306/postgres
    ports:
      - "5000:8080"
      # depends_on:
      #   - db      
    environment:
      - RUST_LOG=debug
      - TZ=America/Bogota
      - SONAR_HOST_URL=${SONAR_HOST_URL}
      - SONAR_LOGIN=sqa_c2c7dd9d4a31f1f679b080cfc8d50cb506ed633e

    # command: cargo test && cargo build --release

  #   db:
  #     container_name: db
  #     image: postgres:13.3-apine
  #     environment:
  #       POSTGRES_USER: postgres
  #       POSTGRES_PASSWORD: postgres
  #       POSTGRES_DB: postgres
  #     ports:
  #       - '5432:5432'
  #     volumes:
  #       - pgdata:/var/lib/postgresql/data

  # volumes:
  #   pgdata: {}
  postgresql:
    image: postgres:alpine3.18 # Posgresql 14.1
    restart: always
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube2023*
      PGDATA: /var/lib/postgresql/data/pgdata
    expose:
      - 5432
    volumes:
      - ./postgresql_data/postgresql:/var/lib/postgresql/data:rw
    networks:
      sonarqube_community_network:
        aliases:
          - postgresql_net
  sonarqube:
    image: sonarqube:9.7.1-community
    restart: always
    depends_on:
      - postgresql
    ports:
      - 9000:9000
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresql_net/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: 'sonarqube2023*'
      SONAR_JDBC_MAXACTIVE: 60
      SONAR_JDBC_MAXIDLE: 5
      SONAR_JDBC_MINIDLE: 2
      SONAR_JDBC_MAXWAIT: 5000
    volumes:
      - ./sonarqube_data/data:/opt/sonarqube/data:rw
      - ./sonarqube_logs/logs:/opt/sonarqube/logs:rw
      - ./sonarqube_extensions/extensions:/opt/sonarqube/extensions:rw
      - /etc/localtime:/etc/localtime
      - /etc/timezone:/etc/timezone
    networks:
      sonarqube_community_network:
        aliases:
          - sonarqube_net
volumes:
  sonarqube_data: {}
  sonarqube_logs: {}
  sonarqube_extensions: {}
  postgresql_data: {}
networks:
  sonarqube_community_network:
    driver: bridge
    ipam:
      driver: default
